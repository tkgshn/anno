{
  "version": 3,
  "sources": ["../src/options.ts"],
  "sourcesContent": ["// \u56FA\u5B9A\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u540D\nconst FIXED_PROJECT_NAME = \"tkgshn-private\";\n\n// \u521D\u671F\u5316\u95A2\u6570\nasync function initializeOptions() {\n  console.log(\"Options page loaded\");\n  \n  // browser API\u306E\u53D6\u5F97\uFF08Safari\u4E92\u63DB\u6027\u306E\u305F\u3081\uFF09\n  const browserAPI = (window as any).browser || (window as any).chrome;\n  \n  // API\u304C\u5229\u7528\u3067\u304D\u306A\u3044\u5834\u5408\u306F\u9759\u7684\u306A\u8868\u793A\n  if (!browserAPI || !browserAPI.storage) {\n    console.error(\"Browser storage API not available\");\n    updateUI(FIXED_PROJECT_NAME, true);\n    return;\n  }\n  \n  try {\n    // \u65E2\u5B58\u306E\u8A2D\u5B9A\u3092\u8AAD\u307F\u8FBC\u307F\uFF08\u76F4\u63A5Storage API\u3092\u4F7F\u7528\uFF09\n    const syncData = await browserAPI.storage.sync.get(null);\n    const localData = await browserAPI.storage.local.get(null);\n    const settings = { ...syncData, ...localData };\n    console.log(\"Current settings:\", settings);\n    \n    // \u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u540D\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u306A\u3044\u5834\u5408\u3001\u307E\u305F\u306F\u7570\u306A\u308B\u5834\u5408\u306F\u56FA\u5B9A\u5024\u3092\u4FDD\u5B58\n    if (settings.project !== FIXED_PROJECT_NAME || settings.annoProjectName !== FIXED_PROJECT_NAME) {\n      console.log(\"Setting fixed project name:\", FIXED_PROJECT_NAME);\n      await browserAPI.storage.sync.set({\n        project: FIXED_PROJECT_NAME,\n        annoProjectName: FIXED_PROJECT_NAME\n      });\n    }\n    \n    // UI\u8981\u7D20\u3092\u66F4\u65B0\n    updateUI(FIXED_PROJECT_NAME);\n    \n    // API Key\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u308B\u5834\u5408\u306F\u66F4\u65B0\n    if (settings.encryptedApiKey) {\n      const apiStatusElement = document.getElementById(\"api-status\");\n      if (apiStatusElement) {\n        apiStatusElement.textContent = \"Configured\";\n        apiStatusElement.className = \"value success\";\n      }\n    }\n    \n    // \u8A2D\u5B9A\u304C\u5B8C\u4E86\u3057\u305F\u3053\u3068\u3092\u30B3\u30F3\u30BD\u30FC\u30EB\u306B\u8868\u793A\n    console.log(\"Settings initialized with project:\", FIXED_PROJECT_NAME);\n    \n    // \u30D0\u30C3\u30AF\u30B0\u30E9\u30A6\u30F3\u30C9\u30B9\u30AF\u30EA\u30D7\u30C8\u306B\u3082\u901A\u77E5\n    if (browserAPI.runtime && browserAPI.runtime.sendMessage) {\n      browserAPI.runtime.sendMessage({\n        type: \"settingsUpdated\",\n        settings: {\n          project: FIXED_PROJECT_NAME,\n          annoProjectName: FIXED_PROJECT_NAME\n        }\n      }).catch((error: any) => {\n        console.log(\"Background notification skipped:\", error);\n      });\n    }\n    \n  } catch (error) {\n    console.error(\"Failed to initialize settings:\", error);\n    \n    const statusElement = document.getElementById(\"status\");\n    if (statusElement) {\n      statusElement.textContent = \"Error loading settings\";\n      statusElement.className = \"value warning\";\n    }\n  }\n}\n\n// UI\u66F4\u65B0\u95A2\u6570\nfunction updateUI(projectName: string, isStatic: boolean = false) {\n  const projectNameElement = document.getElementById(\"project-name\");\n  const statusElement = document.getElementById(\"status\");\n  const apiStatusElement = document.getElementById(\"api-status\");\n  \n  if (projectNameElement) {\n    projectNameElement.textContent = projectName;\n    projectNameElement.className = \"value success\";\n  }\n  \n  if (statusElement) {\n    statusElement.textContent = isStatic ? \"Static Mode\" : \"Ready\";\n    statusElement.className = \"value success\";\n  }\n  \n  if (apiStatusElement) {\n    apiStatusElement.textContent = \"Not configured\";\n    apiStatusElement.className = \"value\";\n  }\n}\n\n// DOM\u304C\u8AAD\u307F\u8FBC\u307E\u308C\u308B\u306E\u3092\u5F85\u3063\u3066\u304B\u3089\u5B9F\u884C\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeOptions);\n} else {\n  // \u3059\u3067\u306B\u8AAD\u307F\u8FBC\u307E\u308C\u3066\u3044\u308B\u5834\u5408\u306F\u76F4\u63A5\u5B9F\u884C\n  initializeOptions();\n}\n"],
  "mappings": ";AACA,IAAM,qBAAqB;AAG3B,eAAe,oBAAoB;AACjC,UAAQ,IAAI,qBAAqB;AAGjC,QAAM,aAAc,OAAe,WAAY,OAAe;AAG9D,MAAI,CAAC,cAAc,CAAC,WAAW,SAAS;AACtC,YAAQ,MAAM,mCAAmC;AACjD,aAAS,oBAAoB,IAAI;AACjC;AAAA,EACF;AAEA,MAAI;AAEF,UAAM,WAAW,MAAM,WAAW,QAAQ,KAAK,IAAI,IAAI;AACvD,UAAM,YAAY,MAAM,WAAW,QAAQ,MAAM,IAAI,IAAI;AACzD,UAAM,WAAW,EAAE,GAAG,UAAU,GAAG,UAAU;AAC7C,YAAQ,IAAI,qBAAqB,QAAQ;AAGzC,QAAI,SAAS,YAAY,sBAAsB,SAAS,oBAAoB,oBAAoB;AAC9F,cAAQ,IAAI,+BAA+B,kBAAkB;AAC7D,YAAM,WAAW,QAAQ,KAAK,IAAI;AAAA,QAChC,SAAS;AAAA,QACT,iBAAiB;AAAA,MACnB,CAAC;AAAA,IACH;AAGA,aAAS,kBAAkB;AAG3B,QAAI,SAAS,iBAAiB;AAC5B,YAAM,mBAAmB,SAAS,eAAe,YAAY;AAC7D,UAAI,kBAAkB;AACpB,yBAAiB,cAAc;AAC/B,yBAAiB,YAAY;AAAA,MAC/B;AAAA,IACF;AAGA,YAAQ,IAAI,sCAAsC,kBAAkB;AAGpE,QAAI,WAAW,WAAW,WAAW,QAAQ,aAAa;AACxD,iBAAW,QAAQ,YAAY;AAAA,QAC7B,MAAM;AAAA,QACN,UAAU;AAAA,UACR,SAAS;AAAA,UACT,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC,EAAE,MAAM,CAAC,UAAe;AACvB,gBAAQ,IAAI,oCAAoC,KAAK;AAAA,MACvD,CAAC;AAAA,IACH;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,kCAAkC,KAAK;AAErD,UAAM,gBAAgB,SAAS,eAAe,QAAQ;AACtD,QAAI,eAAe;AACjB,oBAAc,cAAc;AAC5B,oBAAc,YAAY;AAAA,IAC5B;AAAA,EACF;AACF;AAGA,SAAS,SAAS,aAAqB,WAAoB,OAAO;AAChE,QAAM,qBAAqB,SAAS,eAAe,cAAc;AACjE,QAAM,gBAAgB,SAAS,eAAe,QAAQ;AACtD,QAAM,mBAAmB,SAAS,eAAe,YAAY;AAE7D,MAAI,oBAAoB;AACtB,uBAAmB,cAAc;AACjC,uBAAmB,YAAY;AAAA,EACjC;AAEA,MAAI,eAAe;AACjB,kBAAc,cAAc,WAAW,gBAAgB;AACvD,kBAAc,YAAY;AAAA,EAC5B;AAEA,MAAI,kBAAkB;AACpB,qBAAiB,cAAc;AAC/B,qBAAiB,YAAY;AAAA,EAC/B;AACF;AAGA,IAAI,SAAS,eAAe,WAAW;AACrC,WAAS,iBAAiB,oBAAoB,iBAAiB;AACjE,OAAO;AAEL,oBAAkB;AACpB;",
  "names": []
}
