{
  "version": 3,
  "sources": ["../src/browser-polyfill.ts", "../src/url.ts", "../../../node_modules/diff/lib/index.mjs", "../../scrapbox-loader/src/index.ts", "../../../node_modules/leven/index.js", "../../../node_modules/text-quote-selector/dist/index.mjs", "../../text-quote-injection/src/index.ts", "../src/content.ts"],
  "sourcesContent": ["// Browser API compatibility layer with Safari-specific enhancements\n\n// Type for Safari-specific properties\ninterface SafariExtensions {\n  _isSafari?: boolean;\n  _isIOS?: boolean;\n}\n\n// Create a browser API wrapper\nexport const browser = (() => {\n  // Use native browser API if available (Safari)\n  if (typeof (globalThis as any).browser !== 'undefined') {\n    const api = (globalThis as any).browser;\n    \n    // Add Safari detection properties\n    api._isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    api._isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\n    \n    return api;\n  }\n  \n  // Use chrome API if available (Chrome/Edge)\n  if (typeof (globalThis as any).chrome !== 'undefined' && (globalThis as any).chrome.runtime) {\n    const api = (globalThis as any).chrome;\n    \n    // Add Safari detection properties (will be false)\n    api._isSafari = false;\n    api._isIOS = false;\n    \n    return api;\n  }\n  \n  // If neither is available, we're in a bad state\n  console.error(\"No browser extension API found!\");\n  \n  // Return a minimal mock to prevent crashes\n  return {\n    _isSafari: /^((?!chrome|android).)*safari/i.test(navigator.userAgent),\n    _isIOS: /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream,\n    runtime: {\n      onMessage: { addListener: () => {} },\n      sendMessage: () => Promise.resolve(),\n      getURL: (path: string) => path\n    },\n    storage: {\n      sync: {\n        get: () => Promise.resolve({}),\n        set: () => Promise.resolve()\n      },\n      local: {\n        get: () => Promise.resolve({}),\n        set: () => Promise.resolve()\n      }\n    },\n    action: {\n      onClicked: { addListener: () => {} }\n    },\n    tabs: {\n      sendMessage: () => Promise.resolve(),\n      query: () => Promise.resolve([])\n    }\n  } as any;\n})();\n\n// Also export as chrome for compatibility\nexport const chrome = browser;\n\n// Safari-specific API fallbacks and utilities\nexport const safariCompat = {\n  // Safari doesn't support browser.runtime.openOptionsPage on iOS\n  openOptionsPage: async (): Promise<void> => {\n    try {\n      if (browser.runtime.openOptionsPage && !browser._isIOS) {\n        await browser.runtime.openOptionsPage();\n      } else {\n        // Fallback: open in new tab\n        const optionsUrl = browser.runtime.getURL(\"options.html\");\n        await browser.tabs.create({ url: optionsUrl });\n      }\n    } catch (error) {\n      console.error(\"[safariCompat] Failed to open options page:\", error);\n      // Last resort: try to open in current tab\n      const optionsUrl = browser.runtime.getURL(\"options.html\");\n      window.open(optionsUrl, \"_blank\");\n    }\n  },\n  \n  // Check if running on Safari\n  isSafari: (): boolean => browser._isSafari || false,\n  \n  // Check if running on iOS\n  isIOS: (): boolean => browser._isIOS || false,\n  \n  // Safari storage fallbacks (Safari has 10MB limit vs Chrome's unlimited)\n  safeStorageSet: async (items: Record<string, any>): Promise<void> => {\n    try {\n      await browser.storage.local.set(items);\n    } catch (error: any) {\n      if (error.message?.includes(\"quota\")) {\n        console.error(\"[safariCompat] Storage quota exceeded, attempting cleanup...\");\n        // Try to clear old data\n        const keys = Object.keys(await browser.storage.local.get());\n        if (keys.length > 100) {\n          // Remove oldest entries (assuming keys have timestamps)\n          const toRemove = keys.slice(0, Math.floor(keys.length * 0.2));\n          await browser.storage.local.remove(toRemove);\n          // Retry\n          await browser.storage.local.set(items);\n        }\n      } else {\n        throw error;\n      }\n    }\n  },\n  \n  // Context menus compatibility (not supported on iOS)\n  supportsContextMenus: (): boolean => {\n    return !browser._isIOS && typeof browser.contextMenus !== \"undefined\";\n  },\n  \n  // Permissions check with Safari fallbacks\n  hasPermission: async (permission: string): Promise<boolean> => {\n    if (!browser.permissions?.contains) {\n      console.warn(\"[safariCompat] Permissions API not available\");\n      return false;\n    }\n    \n    try {\n      const result = await browser.permissions.contains({ permissions: [permission] });\n      return result;\n    } catch (error) {\n      console.error(`[safariCompat] Failed to check permission ${permission}:`, error);\n      return false;\n    }\n  }\n};\n\n// Make browser API available globally if needed\ndeclare global {\n  interface Window {\n    browser?: any;\n    chrome?: any;\n  }\n}\n\nif (typeof (globalThis as any).browser === \"undefined\") {\n  (globalThis as any).browser = browser;\n}\nif (typeof (globalThis as any).chrome === \"undefined\") {\n  (globalThis as any).chrome = browser;\n}", "export const encodeForScrapboxReadableLink = (uriComponent: string) => {\n  let encoded = encodeURIComponent(uriComponent);\n\n  encoded = encoded.replaceAll(\"%20\", \"+\");\n\n  for (const match of uriComponent.matchAll(\n    /[\\p{scx=Hiragana}\\p{scx=Katakana}\\p{scx=Han}]/gu\n  )) {\n    encoded = encoded.replace(encodeURIComponent(match[0]), match[0]);\n  }\n\n  return encoded;\n};\n", "function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var _options$timeout;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var maxExecutionTime = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : Infinity;\n    var abortAfterTimestamp = Date.now() + maxExecutionTime;\n    var bestPath = [{\n      oldPos: -1,\n      lastComponent: undefined\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n\n\n    var minDiagonalToConsider = -Infinity,\n        maxDiagonalToConsider = Infinity; // Main worker method. checks all permutations of a given edit length for acceptance.\n\n    function execEditLength() {\n      for (var diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {\n        var basePath = void 0;\n        var removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = false;\n\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          var addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        var canRemove = removePath && removePath.oldPos + 1 < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n\n\n        if (!canRemove || canAdd && removePath.oldPos + 1 < addPath.oldPos) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  addToPath: function addToPath(path, added, removed, oldPosInc) {\n    var last = path.lastComponent;\n\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: last.count + 1,\n          added: added,\n          removed: removed,\n          previousComponent: last.previousComponent\n        }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: 1,\n          added: added,\n          removed: removed,\n          previousComponent: last\n        }\n      };\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {\n        count: commonCount,\n        previousComponent: basePath.lastComponent\n      };\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  var components = [];\n  var nextComponent;\n\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n\n  components.reverse();\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var finalComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof finalComponent.value === 'string' && (finalComponent.added || finalComponent.removed) && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080\u201300FF\n//  - U+00D7  \u00D7 Multiplication sign\n//  - U+00F7  \u00F7 Division sign\n// Latin Extended-A, 0100\u2013017F\n// Latin Extended-B, 0180\u2013024F\n// IPA Extensions, 0250\u201302AF\n// Spacing Modifier Letters, 02B0\u201302FF\n//  - U+02C7  \u02C7 &#711;  Caron\n//  - U+02D8  \u02D8 &#728;  Breve\n//  - U+02D9  \u02D9 &#729;  Dot Above\n//  - U+02DA  \u02DA &#730;  Ring Above\n//  - U+02DB  \u02DB &#731;  Ogonek\n//  - U+02DC  \u02DC &#732;  Small Tilde\n//  - U+02DD  \u02DD &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00\u20131EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  if (this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters && _hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\nfunction reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return _objectSpread2(_objectSpread2({}, structuredPatch), {}, {\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(function (hunk) {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(function (l) {\n          if (l.startsWith('-')) {\n            return \"+\".concat(l.slice(1));\n          }\n\n          if (l.startsWith('+')) {\n            return \"-\".concat(l.slice(1));\n          }\n\n          return l;\n        })\n      };\n    })\n  });\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\nexport { Diff, applyPatch, applyPatches, canonicalize, convertChangesToDMP, convertChangesToXML, createPatch, createTwoFilesPatch, diffArrays, diffChars, diffCss, diffJson, diffLines, diffSentences, diffTrimmedLines, diffWords, diffWordsWithSpace, formatPatch, merge, parsePatch, reversePatch, structuredPatch };\n", "import { diffChars } from \"diff\";\nimport { TextQuoteSelector } from \"text-quote-selector\";\n\nexport type Annolink = Pick<Annopage, \"projectName\" | \"title\">;\n\nexport interface Annopage {\n  projectName: string;\n  title: string;\n  configs: {\n    textQuoteSelector: TextQuoteSelector;\n    markerText: string;\n    lineID: string;\n    description: string;\n    icons: {\n      url: string;\n      isStrong: boolean;\n    }[];\n  }[];\n}\n\ninterface Project {\n  name: string;\n  image?: string;\n}\n\nconst annoProtocolMap = new Map([\n  [\"http:\", \"anno:\"],\n  [\"https:\", \"annos:\"],\n]);\nconst fallbackIconURL =\n  \"https://i.gyazo.com/1e3dbb79088aa1627d7e092481848df5.png\";\n\nexport const clearScrapboxLoaderCache = () => {\n  projectCache.clear();\n};\n\nexport const extractAnnolink = (url: string) => {\n  const annolinkPaths = getAnnolink(url).split(\"/\");\n  const annolinks = [];\n  do {\n    annolinks.unshift(decodeURI(annolinkPaths.join(\"/\")));\n    annolinkPaths.pop();\n  } while (annolinkPaths.length >= 2);\n  return annolinks;\n};\n\nexport const fetchAnnopages = async ({\n  annoProjectName,\n  annolink,\n  fetcher,\n}: {\n  annoProjectName: string;\n  annolink: string;\n  fetcher: typeof fetch;\n}) => {\n  const annopageEntries: [string, Annopage][] = [];\n\n  const annolinkPageResponse = await fetcher(\n    `https://scrapbox.io/api/pages/${encodeURIComponent(\n      annoProjectName\n    )}/${encodeURIComponent(annolink)}`\n  );\n  if (!annolinkPageResponse.ok) {\n    console.error(`Failed to fetch page: ${annolinkPageResponse.status}`);\n    return annopageEntries;\n  }\n  const annolinkPage = await annolinkPageResponse.json();\n\n  const annolinkPageText = annolinkPage.lines\n    // @ts-expect-error\n    .map(({ text }) => text)\n    .join(\"\\n\");\n  const annopageLinks: Annolink[] = [\n    ...new Set(\n      [\n        ...annolinkPage.links,\n        ...annolinkPage.projectLinks,\n        // @ts-expect-error\n        ...annolinkPage.relatedPages.links1hop.map(({ title }) => title),\n      ].sort(\n        (a, b) =>\n          annolinkPageText.indexOf(`[${b}]`) -\n          annolinkPageText.indexOf(`[${a}]`)\n      )\n    ),\n  ].map((link) => {\n    const paths = link.split(\"/\");\n    return link.startsWith(\"/\")\n      ? { projectName: paths[1], title: paths.slice(2).join(\"/\") }\n      : { projectName: annoProjectName, title: link };\n  });\n\n  for (const annopageLink of annopageLinks) {\n    const annopageEntry = await fetchAnnopage({ annopageLink, fetcher });\n    if (!annopageEntry) {\n      continue;\n    }\n    annopageEntries.push(annopageEntry);\n  }\n\n  return annopageEntries;\n};\n\nexport const getAnnolink = (url: string) => {\n  let replacedURL = url;\n  for (const [protocol, annoProtocol] of annoProtocolMap) {\n    if (replacedURL.startsWith(protocol)) {\n      replacedURL = replacedURL.replace(protocol, annoProtocol);\n    }\n  }\n  return replacedURL;\n};\n\nexport const isAnnolink = (url: string) =>\n  [...annoProtocolMap].some(([, annoProtocol]) => url.startsWith(annoProtocol));\n\nconst projectCache = new Map<string, Promise<Project | undefined>>();\n\nconst fetchAnnopage = async ({\n  annopageLink,\n  fetcher,\n}: {\n  annopageLink: Annolink;\n  fetcher: typeof fetch;\n}): Promise<[string, Annopage] | undefined> => {\n  const annopageProjectPromise =\n    projectCache.get(annopageLink.projectName) ??\n    (async (): Promise<Project | undefined> => {\n      const projectAPIResponse = await fetcher(\n        `https://scrapbox.io/api/projects/${encodeURIComponent(\n          annopageLink.projectName\n        )}`\n      );\n      if (!projectAPIResponse.ok) {\n        console.error(`Failed to fetch project: ${projectAPIResponse.status}`);\n        return;\n      }\n      return projectAPIResponse.json();\n    })();\n  projectCache.set(annopageLink.projectName, annopageProjectPromise);\n  const annopageProject = await annopageProjectPromise;\n  if (!annopageProject) {\n    return;\n  }\n\n  const annopageResponse = await fetcher(\n    `https://scrapbox.io/api/pages/${encodeURIComponent(\n      annopageProject.name\n    )}/${encodeURIComponent(annopageLink.title)}?followRename`\n  );\n  if (!annopageResponse.ok) {\n    console.error(`Failed to fetch page: ${annopageResponse.status}`);\n    return;\n  }\n  const annopage = await annopageResponse.json();\n\n  const sections = [];\n  let section = [];\n  for (const line of annopage.lines.slice(1)) {\n    if (line.text) {\n      section.push(line);\n    } else {\n      sections.push(section);\n      section = [];\n    }\n  }\n  sections.push(section);\n\n  const configs = [];\n  for (const section of sections) {\n    const sectionText = section.map(({ text }) => text).join(\"\\n\");\n\n    const annotations = [\n      ...sectionText.matchAll(/\\[([^\\]]*)\\s(.*?)\\]/g),\n    ].flatMap((linkExpressionMatch) => {\n      let searchParams;\n      try {\n        searchParams = new URLSearchParams(\n          new URL(linkExpressionMatch[2]).hash.slice(1)\n        );\n      } catch {\n        return [];\n      }\n\n      const exact = searchParams.get(\"e\");\n      if (!exact) {\n        return [];\n      }\n\n      return [\n        {\n          body: linkExpressionMatch[0],\n          prefix: searchParams.get(\"p\") ?? undefined,\n          exact,\n          suffix: searchParams.get(\"s\") ?? undefined,\n          markerText: linkExpressionMatch[1],\n        },\n      ];\n    });\n\n    let annotationRemovedText = sectionText;\n    for (const { body } of annotations) {\n      annotationRemovedText = annotationRemovedText.replaceAll(body, \"\");\n    }\n    const annotationRemovedLines = annotationRemovedText.trim().split(\"\\n\");\n    const mod = annotationRemovedLines\n      .flatMap((line) => {\n        const match = line.match(/^\\s*>(.*)/);\n        return match ? [match[1].trim()] : [];\n      })\n      .join(\"\\n\");\n    const description = annotationRemovedLines\n      .filter((line) => !line.trim().startsWith(\">\"))\n      .join(\"\\n\");\n\n    const icons = [];\n    for (const iconExpressionMatch of sectionText.matchAll(\n      /(\\[?)\\[([^\\]]+)\\.icon(?:\\*([1-9]\\d*))?\\](\\]?)/g\n    )) {\n      const title = iconExpressionMatch[2];\n      const tower = Number(iconExpressionMatch[3] ?? \"1\");\n      const isStrong = Boolean(\n        iconExpressionMatch[1] && iconExpressionMatch[4]\n      );\n\n      for (const _towerIndex of Array(tower).keys()) {\n        icons.push({\n          url: `https://scrapbox.io/api/pages/${encodeURIComponent(\n            annopageProject.name\n          )}/${encodeURIComponent(title)}/icon?followRename`,\n          isStrong,\n        });\n      }\n    }\n    if (icons.length < 1) {\n      icons.push({\n        url: annopageProject.image ?? fallbackIconURL,\n        isStrong: false,\n      });\n    }\n\n    for (const { prefix, exact, suffix, markerText } of annotations) {\n      configs.push({\n        textQuoteSelector: { prefix, exact, suffix },\n        diff: diffChars(exact, mod),\n        markerText,\n        lineID: section[0].id,\n        description,\n        icons,\n      });\n    }\n  }\n\n  return [\n    annopage.id,\n    {\n      projectName: annopageProject.name,\n      title: annopage.title,\n      configs,\n    },\n  ];\n};\n", "const array = [];\nconst characterCodeCache = [];\n\nexport default function leven(first, second) {\n\tif (first === second) {\n\t\treturn 0;\n\t}\n\n\tconst swap = first;\n\n\t// Swapping the strings if `a` is longer than `b` so we know which one is the\n\t// shortest & which one is the longest\n\tif (first.length > second.length) {\n\t\tfirst = second;\n\t\tsecond = swap;\n\t}\n\n\tlet firstLength = first.length;\n\tlet secondLength = second.length;\n\n\t// Performing suffix trimming:\n\t// We can linearly drop suffix common to both strings since they\n\t// don't increase distance at all\n\t// Note: `~-` is the bitwise way to perform a `- 1` operation\n\twhile (firstLength > 0 && (first.charCodeAt(~-firstLength) === second.charCodeAt(~-secondLength))) {\n\t\tfirstLength--;\n\t\tsecondLength--;\n\t}\n\n\t// Performing prefix trimming\n\t// We can linearly drop prefix common to both strings since they\n\t// don't increase distance at all\n\tlet start = 0;\n\n\twhile (start < firstLength && (first.charCodeAt(start) === second.charCodeAt(start))) {\n\t\tstart++;\n\t}\n\n\tfirstLength -= start;\n\tsecondLength -= start;\n\n\tif (firstLength === 0) {\n\t\treturn secondLength;\n\t}\n\n\tlet bCharacterCode;\n\tlet result;\n\tlet temporary;\n\tlet temporary2;\n\tlet index = 0;\n\tlet index2 = 0;\n\n\twhile (index < firstLength) {\n\t\tcharacterCodeCache[index] = first.charCodeAt(start + index);\n\t\tarray[index] = ++index;\n\t}\n\n\twhile (index2 < secondLength) {\n\t\tbCharacterCode = second.charCodeAt(start + index2);\n\t\ttemporary = index2++;\n\t\tresult = index2;\n\n\t\tfor (index = 0; index < firstLength; index++) {\n\t\t\ttemporary2 = bCharacterCode === characterCodeCache[index] ? temporary : temporary + 1;\n\t\t\ttemporary = array[index];\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tresult = array[index] = temporary > result ? (temporary2 > result ? result + 1 : temporary2) : (temporary2 > temporary ? temporary + 1 : temporary2);\n\t\t}\n\t}\n\n\treturn result;\n}\n", "import leven from \"leven\";\nconst contextLength = 32;\nexport const getTextIndex = (root) => {\n    const index = [];\n    let text = \"\";\n    const nodeIterator = document.createNodeIterator(root, NodeFilter.SHOW_TEXT);\n    let node;\n    while ((node = nodeIterator.nextNode())) {\n        if (!(node instanceof Text)) {\n            throw new Error(\"node is not Text\");\n        }\n        index.push([text.length, node]);\n        text += node.textContent ?? \"\";\n    }\n    return { text, index };\n};\nexport const getTextRange = (range) => {\n    const startNode = getRangePointNode({\n        container: range.startContainer,\n        offset: range.startOffset,\n    });\n    const endNode = getRangePointNode({\n        container: range.endContainer,\n        offset: range.endOffset,\n    });\n    const textNodes = [];\n    const nodeIterator = document.createNodeIterator(range.commonAncestorContainer, NodeFilter.SHOW_ALL);\n    let node;\n    let isInRange = false;\n    while ((node = nodeIterator.nextNode())) {\n        if (node === startNode) {\n            isInRange = true;\n        }\n        if (isInRange && node instanceof Text) {\n            textNodes.push(node);\n        }\n        if (node === endNode) {\n            break;\n        }\n    }\n    let startContainer;\n    let startOffset = range.startOffset;\n    startContainer = range.startContainer;\n    if (!(startContainer instanceof Text)) {\n        startContainer = textNodes.at(0);\n        if (!startContainer) {\n            throw new Error(\"startContainer not found\");\n        }\n        startOffset = 0;\n    }\n    let endContainer;\n    let endOffset = range.endOffset;\n    endContainer = range.endContainer;\n    if (!(endContainer instanceof Text)) {\n        endContainer = textNodes.at(-1);\n        if (!endContainer) {\n            throw new Error(\"endContainer not found\");\n        }\n        endOffset = (endContainer.textContent ?? \"\").length;\n    }\n    return {\n        start: { textNode: startContainer, offset: startOffset },\n        end: { textNode: endContainer, offset: endOffset },\n    };\n};\nexport const quoteText = (textIndex, range) => {\n    const { start, end } = getTextRange(range);\n    const startIndex = textRangePointToIndex(textIndex, start);\n    const endIndex = textRangePointToIndex(textIndex, end);\n    return {\n        exact: textIndex.text.slice(startIndex, endIndex),\n        prefix: textIndex.text.slice(Math.max(startIndex - contextLength, 0), startIndex),\n        suffix: textIndex.text.slice(endIndex, endIndex + contextLength),\n    };\n};\nexport const textQuoteSelectorAll = (textIndex, { exact, prefix, suffix }) => {\n    const exactMatchIndexes = [];\n    let exactMatchIndex = -1;\n    while ((exactMatchIndex = textIndex.text.indexOf(exact, exactMatchIndex + 1)) !==\n        -1) {\n        exactMatchIndexes.push(exactMatchIndex);\n    }\n    const matches = exactMatchIndexes.map((exactMatchIndex) => {\n        const exactMatchEndIndex = exactMatchIndex + exact.length;\n        const prefixDistance = typeof prefix === \"string\"\n            ? leven(textIndex.text.slice(Math.max(exactMatchIndex - contextLength, 0), exactMatchIndex), prefix)\n            : 0;\n        const suffixDistance = typeof suffix === \"string\"\n            ? leven(textIndex.text.slice(exactMatchEndIndex, exactMatchEndIndex + contextLength), suffix)\n            : 0;\n        const distance = prefixDistance + suffixDistance;\n        return [exactMatchIndex, distance];\n    });\n    return [...matches]\n        .sort(([, aDistance], [, bDistance]) => aDistance - bDistance)\n        .map(([startIndex, distance]) => {\n        const start = indexToTextRangePoint(textIndex, {\n            index: startIndex,\n            isStart: true,\n        });\n        const end = indexToTextRangePoint(textIndex, {\n            index: startIndex + exact.length,\n            isStart: false,\n        });\n        const range = new Range();\n        range.setStart(start.textNode, start.offset);\n        range.setEnd(end.textNode, end.offset);\n        return { range, distance };\n    });\n};\nconst textRangePointToIndex = (textIndex, { textNode, offset }) => {\n    const record = textIndex.index.find(([, currentTextNode]) => currentTextNode === textNode);\n    if (!record) {\n        throw new Error(\"textNode not found in index\");\n    }\n    const [index] = record;\n    return index + offset;\n};\nconst indexToTextRangePoint = (textIndex, { index, isStart }) => {\n    let prev;\n    for (const current of textIndex.index) {\n        const [currentIndex] = current;\n        if (isStart ? index < currentIndex : index <= currentIndex) {\n            break;\n        }\n        prev = current;\n    }\n    if (!prev) {\n        throw new Error(\"index out of range\");\n    }\n    const [prevIndex, textNode] = prev;\n    return {\n        textNode,\n        offset: index - prevIndex,\n    };\n};\nconst getRangePointNode = ({ container, offset, }) => container instanceof Text ||\n    container instanceof Comment ||\n    container instanceof CDATASection\n    ? container\n    : [...container.childNodes].at(offset) ?? container.nextSibling;\n", "import {\n  TextIndex,\n  TextQuoteSelector,\n  getTextIndex,\n  textQuoteSelectorAll,\n} from \"text-quote-selector\";\n\nexport interface TextQuoteInjectionConfig {\n  id: string;\n  textQuoteSelector: TextQuoteSelector;\n  inject: (range: Range) => Pick<State, \"range\" | \"cleanUp\">;\n}\n\ninterface Injection {\n  config: TextQuoteInjectionConfig;\n  states: State[];\n}\n\ninterface State {\n  range: Range;\n  cleanUp: () => void;\n  staticRange: StaticRange;\n  distance: number;\n}\n\nexport const getCanonicalURL = () => {\n  const canonicalLinkElement = document.querySelector(\n    'link[rel=\"canonical\" i]'\n  );\n  const url = new URL(\n    (canonicalLinkElement instanceof HTMLLinkElement &&\n      canonicalLinkElement.href) ||\n      location.href\n  );\n  url.hash = \"\";\n  return String(url);\n};\n\nlet injections: Injection[] = [];\nexport const injectByTextQuote = (configs: TextQuoteInjectionConfig[]) => {\n  const configIDs = configs.map(({ id }) => id);\n  for (const { config, states } of injections) {\n    if (configIDs.includes(config.id)) {\n      continue;\n    }\n\n    for (const { cleanUp } of states) {\n      cleanUp();\n    }\n  }\n\n  injections = configs.map(\n    (config) =>\n      injections.find((injection) => injection.config.id === config.id) ?? {\n        config,\n        states: [],\n      }\n  );\n\n  handle();\n};\n\nconst handle = () => {\n  mutationObserver.disconnect();\n  try {\n    let textIndex = getTextIndex(document.body);\n    injections = injections.map((injection) => {\n      const unchangedStates = injection.states.filter(\n        ({ range, cleanUp, staticRange }) => {\n          if (isEqualRange(range, staticRange)) {\n            return true;\n          }\n\n          cleanUp();\n          textIndex = getTextIndex(document.body);\n          return false;\n        }\n      );\n\n      const { nearestRanges, minDistance } = getNearestRanges(\n        textIndex,\n        injection.config.textQuoteSelector,\n        Math.min(...unchangedStates.map(({ distance }) => distance))\n      );\n\n      return {\n        ...injection,\n        states: [\n          ...unchangedStates,\n          ...nearestRanges.flatMap((nearestRange) => {\n            if (\n              unchangedStates.some((state) =>\n                isEqualRange(state.range, nearestRange)\n              )\n            )\n              return [];\n\n            const { range, cleanUp } = injection.config.inject(nearestRange);\n            textIndex = getTextIndex(document.body);\n\n            return [\n              {\n                range,\n                cleanUp,\n                staticRange: new StaticRange(range),\n                distance: minDistance,\n              },\n            ];\n          }),\n        ],\n      };\n    });\n  } finally {\n    mutationObserver.observe(document.body, {\n      subtree: true,\n      childList: true,\n      characterData: true,\n    });\n  }\n};\nconst mutationObserver = new MutationObserver(handle);\n\nconst getNearestRanges = (\n  textIndex: TextIndex,\n  textQuoteSelector: TextQuoteSelector,\n  prevDistance: number\n) => {\n  const ranges = textQuoteSelectorAll(textIndex, textQuoteSelector);\n  const minDistance = Math.min(\n    prevDistance,\n    ranges.at(0)?.distance ?? Infinity\n  );\n  const nearestRanges = ranges\n    .filter(({ range }) => {\n      const ancestorHTMLElement =\n        range.commonAncestorContainer instanceof HTMLElement\n          ? range.commonAncestorContainer\n          : range.commonAncestorContainer.parentElement;\n      return !ancestorHTMLElement?.isContentEditable;\n    })\n    .flatMap(({ range, distance }) => (distance <= minDistance ? [range] : []));\n  return { nearestRanges, minDistance };\n};\n\nconst isEqualRange = (a: AbstractRange, b: AbstractRange) =>\n  a.startContainer === b.startContainer &&\n  a.startOffset === b.startOffset &&\n  a.endContainer === b.endContainer &&\n  a.endOffset === b.endOffset;\n", "import { browser } from \"./browser-polyfill\";\nimport { encodeForScrapboxReadableLink } from \"./url\";\nimport { Annolink, getAnnolink } from \"scrapbox-loader\";\nimport { getCanonicalURL, injectByTextQuote } from \"text-quote-injection\";\nimport {\n  TextQuoteSelector,\n  getTextIndex,\n  getTextRange,\n  quoteText,\n  textQuoteSelectorAll,\n} from \"text-quote-selector\";\n\n// Use unified message types\nimport type {\n  BackgroundToContentMessage,\n  ContentToBackgroundMessage,\n  InjectionData,\n  InjectionPage,\n  ErrorInfo,\n} from \"./types/messages\";\n\n// Constants\nconst STYLE_ID = \"anno-styles\";\nconst SCROLL_TIMEOUT = 5000;\nconst MAX_RETRY_ATTEMPTS = 3;\nconst RETRY_DELAY = 1000;\n\n// Global state\nlet prevInjectionData: InjectionData | undefined;\nlet isHighlighted = false;\nlet prevURL: string | undefined;\n\n// Error handling wrapper\nasync function withErrorHandling<T>(\n  operation: () => Promise<T>,\n  context: string,\n  retries = 0\n): Promise<T | null> {\n  try {\n    return await operation();\n  } catch (error) {\n    const errorInfo: ErrorInfo = {\n      message: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      context: { operation: context, retries },\n      timestamp: Date.now(),\n    };\n    \n    console.error(`[content] ${context} failed:`, errorInfo);\n    \n    // Send error to background\n    const errorMessage: ContentToBackgroundMessage = {\n      type: \"ERROR\",\n      error: errorInfo,\n    };\n    \n    try {\n      await browser.runtime.sendMessage(errorMessage);\n    } catch (sendError) {\n      console.error(\"[content] Failed to report error to background:\", sendError);\n    }\n    \n    // Retry if applicable\n    if (retries < MAX_RETRY_ATTEMPTS) {\n      console.log(`[content] Retrying ${context} (${retries + 1}/${MAX_RETRY_ATTEMPTS})...`);\n      await new Promise(resolve => setTimeout(resolve, RETRY_DELAY * (retries + 1)));\n      return withErrorHandling(operation, context, retries + 1);\n    }\n    \n    return null;\n  }\n}\n\n// Initialize styles\nfunction initializeStyles(): void {\n  if (document.getElementById(STYLE_ID)) return;\n  \n  const styleElement = document.createElement(\"style\");\n  styleElement.id = STYLE_ID;\n  styleElement.textContent = `\n    .anno {\n      &.barmap {\n        all: unset;\n        position: fixed;\n        width: 16px;\n        border-top: 8px solid transparent;\n        border-bottom: 8px solid transparent;\n        background-clip: padding-box;\n        cursor: pointer;\n        opacity: 0.5;\n        z-index: 2147483647;\n        transition: opacity 0.2s ease;\n        \n        &:hover {\n          opacity: 0.8;\n        }\n      }\n\n      &.icon {\n        all: revert;\n        border: none;\n        vertical-align: text-bottom;\n      }\n\n      &.marker {\n        all: revert;\n        transition: background-color 0.2s ease;\n      }\n    }\n  `;\n  document.head.appendChild(styleElement);\n}\n\n// Mark selected text\nconst mark = async (): Promise<void> => {\n  console.log(\"[content] mark() called\");\n  console.log(\"[content] prevInjectionData:\", prevInjectionData);\n  \n  if (!prevInjectionData) {\n    console.warn(\"[content] No injection data available for marking\");\n    // Create default injection data with fixed project name\n    prevInjectionData = {\n      annoProjectName: \"tkgshn-private\",\n      pageRecord: {}\n    };\n    console.log(\"[content] Created default injection data\");\n  }\n\n  await withErrorHandling(async () => {\n    const title = document.title || new Date().toLocaleString();\n    const headerLines: string[] = [];\n\n    if (!prevInjectionData?.collaboratedPage) {\n      const gyazoIDMatch = location.pathname.match(/^\\/([0-9a-z]{32})$/);\n      if (location.host.match(/^([0-9a-z\\-]+\\.)?gyazo.com$/) && gyazoIDMatch) {\n        const response = await fetch(\n          `/${encodeURIComponent(gyazoIDMatch[1])}.json`\n        );\n        if (!response.ok) {\n          throw new Error(`Failed to fetch gyazo.com: ${response.status}`);\n        }\n        const { desc, metadata, permalink_url } = await response.json();\n\n        headerLines.push(\n          ...[\n            `[${permalink_url} ${permalink_url}]`,\n            desc || undefined,\n            metadata.url\n              ? metadata.title\n                ? `[${metadata.title} ${metadata.url}]`\n                : `[${metadata.url}]`\n              : metadata.title,\n            metadata.exif_normalized?.latitude &&\n            `[N${metadata.exif_normalized.latitude},E${metadata.exif_normalized.longitude},Z17]`,\n          ].flatMap((data) => (typeof data === \"string\" ? data.split(\"\\n\") : []))\n        );\n      } else {\n        headerLines.push(`[${title} ${getCanonicalURL()}]`);\n\n        // Extract metadata safely\n        const metaTags = {\n          ogImage: document.querySelector('meta[property=\"og:image\" i]'),\n          description: document.querySelector('meta[name=\"description\" i]'),\n          ogDescription: document.querySelector('meta[property=\"og:description\" i]'),\n          keywords: document.querySelector('meta[name=\"keywords\" i]'),\n        };\n\n        const ogImageURL = metaTags.ogImage instanceof HTMLMetaElement ? metaTags.ogImage.content : null;\n        if (ogImageURL) {\n          headerLines.push(`[${ogImageURL}#.png]`);\n        }\n\n        const description = \n          (metaTags.ogDescription instanceof HTMLMetaElement && metaTags.ogDescription.content) ||\n          (metaTags.description instanceof HTMLMetaElement && metaTags.description.content);\n        if (description) {\n          headerLines.push(...description.split(\"\\n\").map((line) => `> ${line}`));\n        }\n\n        const keywords = metaTags.keywords instanceof HTMLMetaElement ? metaTags.keywords.content : null;\n        if (keywords) {\n          headerLines.push(keywords);\n        }\n      }\n\n      // Add date and icon\n      const today = new Date();\n      const yyyy = today.getFullYear();\n      const mm = today.getMonth() + 1;\n      const dd = today.getDate();\n      const dateBracket = `[${yyyy}/${mm}/${dd}]`;\n      headerLines.push(dateBracket);\n      headerLines.push('[public.icon]');\n      headerLines.push(\n        `#annopage [${decodeURI(getAnnolink(getCanonicalURL()))}]`,\n        \"\"\n      );\n    }\n\n    await write({\n      annopageLink: prevInjectionData.collaboratedPage ?? {\n        projectName: prevInjectionData.annoProjectName,\n        title,\n      },\n      headerLines,\n      includesPrefix: true,\n      includesSuffix: true,\n      markerText:\n        prevInjectionData?.collaboratedPage?.configs.at(-1)?.markerText || \"\uD83C\uDF40\",\n    });\n  }, \"Mark selection\");\n};\n\n// Write to Scrapbox\nconst write = async ({\n  annopageLink,\n  headerLines,\n  includesPrefix,\n  includesSuffix,\n  markerText,\n}: {\n  annopageLink: Annolink;\n  headerLines: string[];\n  includesPrefix: boolean;\n  includesSuffix: boolean;\n  markerText: string;\n}): Promise<void> => {\n  const lines = [...headerLines];\n\n  const selection = getSelection();\n  const isSelected =\n    selection && !selection.isCollapsed && selection.rangeCount >= 1;\n  \n  console.log(\"[content] write() - selection:\", {\n    isSelected,\n    isCollapsed: selection?.isCollapsed,\n    rangeCount: selection?.rangeCount,\n    selectedText: isSelected ? selection.toString() : null\n  });\n    \n  if (isSelected) {\n    const range = selection.getRangeAt(0);\n    const textQuoteSelector = quoteText(\n      getTextIndex(document.body),\n      range\n    );\n\n    lines.push(\n      `[${markerText} ${getCanonicalURL()}#${[\n        `e=${encodeForScrapboxReadableLink(textQuoteSelector.exact)}`,\n        ...(includesPrefix && textQuoteSelector.prefix\n          ? [`p=${encodeForScrapboxReadableLink(textQuoteSelector.prefix)}`]\n          : []),\n        ...(includesSuffix && textQuoteSelector.suffix\n          ? [`s=${encodeForScrapboxReadableLink(textQuoteSelector.suffix)}`]\n          : []),\n      ].join(\"&\")}]`\n    );\n    \n    lines.push(\n      ...textQuoteSelector.exact\n        .trim()\n        .replaceAll(/^ +/gm, \"\")\n        .replaceAll(/\\n{2,}/g, \"\\n\")\n        .split(\"\\n\")\n        .map((line) => `> ${line}`)\n    );\n  }\n\n  const scrapboxUrl = `https://scrapbox.io/${encodeURIComponent(\n    annopageLink.projectName\n  )}/${encodeURIComponent(annopageLink.title)}?${new URLSearchParams({\n    body: lines.join(\"\\n\"),\n    followRename: \"true\",\n  })}`;\n  \n  console.log(\"[content] Opening Scrapbox URL:\", scrapboxUrl);\n  \n  const openMessage: ContentToBackgroundMessage = {\n    type: \"OPEN_TAB\",\n    url: scrapboxUrl,\n  };\n  \n  await browser.runtime.sendMessage(openMessage);\n  await new Promise((resolve) => setTimeout(resolve, SCROLL_TIMEOUT));\n  prevURL = undefined;\n  handleDocumentChange();\n};\n\n// Message handler\nbrowser.runtime.onMessage.addListener(\n  async (message: BackgroundToContentMessage): Promise<any> => {\n    console.log(\"[content] Received message:\", message.type);\n    \n    switch (message.type) {\n      case \"MARK_SELECTION\":\n        await mark();\n        break;\n\n      case \"INJECT_ANNOTATIONS\":\n        await withErrorHandling(async () => {\n          const configs = Object.values(\n            message.data.pageRecord\n          ).flatMap(({ configs }) => configs);\n\n          injectByTextQuote(\n            configs.map((config) => ({\n              id: JSON.stringify(config),\n              textQuoteSelector: config.textQuoteSelector,\n              inject: (range) => createAnnotation(range, config),\n            }))\n          );\n\n          prevInjectionData = message.data;\n        }, \"Inject annotations\");\n        break;\n\n      case \"CLEAR_ANNOTATIONS\":\n        clearAnnotations();\n        prevInjectionData = undefined;\n        break;\n\n      case \"UPDATE_SETTINGS\":\n        // Handle settings update if needed\n        console.log(\"[content] Settings updated:\", message.settings);\n        break;\n\n      default:\n        console.warn(\"[content] Unknown message type:\", (message as any).type);\n    }\n    \n    // Special handling for annotation count requests\n    if ((message as any).type === \"GET_ANNOTATION_COUNT\") {\n      const annotations = document.querySelectorAll(\".anno.marker\");\n      return { count: annotations.length };\n    }\n  }\n);\n\n// Create annotation elements\nfunction createAnnotation(range: Range, config: any) {\n  const textRange = getTextRange(range);\n  const splittedStartTextNode = textRange.start.textNode.splitText(\n    textRange.start.offset\n  );\n  const end =\n    textRange.start.textNode === textRange.end.textNode\n      ? {\n          textNode: splittedStartTextNode,\n          offset: textRange.end.offset - textRange.start.offset,\n        }\n      : textRange.end;\n  end.textNode.splitText(end.offset);\n\n  const splittedRange = new Range();\n  splittedRange.setStart(splittedStartTextNode, 0);\n  splittedRange.setEnd(end.textNode, end.offset);\n\n  const textNodes: Text[] = [];\n  const nodeIterator = document.createNodeIterator(\n    splittedRange.commonAncestorContainer,\n    NodeFilter.SHOW_TEXT\n  );\n  let currentNode;\n  let isInRange = false;\n  while ((currentNode = nodeIterator.nextNode())) {\n    if (currentNode === splittedRange.startContainer) {\n      isInRange = true;\n    }\n\n    if (isInRange && currentNode instanceof Text) {\n      textNodes.push(currentNode);\n    }\n\n    if (currentNode === splittedRange.endContainer) {\n      break;\n    }\n  }\n\n  const colorMap = new Map([\n    [\"\uD83D\uDFE5\", \"hsl(0 100% 87.5%)\"],\n    [\"\uD83D\uDFE7\", \"hsl(40 100% 87.5%)\"],\n    [\"\uD83D\uDFE8\", \"hsl(60 100% 87.5%)\"],\n    [\"\uD83D\uDFE9\", \"hsl(120 100% 87.5%)\"],\n    [\"\uD83D\uDFE6\", \"hsl(240 100% 87.5%)\"],\n    [\"\uD83D\uDFEA\", \"hsl(300 100% 87.5%)\"],\n    [\"\uD83D\uDFEB\", \"hsl(0 25% 75%)\"],\n    [\"\u2B1B\", \"hsl(0 0% 75%)\"],\n    [\"\u2B1C\", \"transparent\"],\n  ]);\n  \n  const color = colorMap.get(config.markerText) ?? \"hsl(120 50% 85%)\";\n\n  const markElements = textNodes.map((textNode) => {\n    const markElement = document.createElement(\"mark\");\n    markElement.classList.add(\"anno\", \"marker\");\n    markElement.style.backgroundColor = color;\n\n    textNode.after(markElement);\n    markElement.append(textNode);\n    return markElement;\n  });\n\n  const iframeElements = config.iframes.map((iframe: any) => {\n    const iframeElement = document.createElement(\"iframe\");\n    iframeElement.src = iframe.url;\n    iframeElement.sandbox.add(\n      \"allow-popups\",\n      \"allow-popups-to-escape-sandbox\",\n      \"allow-scripts\"\n    );\n    iframeElement.classList.add(\"anno\", \"icon\");\n    iframeElement.style.width = `${iframe.width}px`;\n    iframeElement.style.height = `${iframe.height}px`;\n    return iframeElement;\n  });\n  \n  markElements.at(-1)?.after(...iframeElements);\n\n  // Find scrollable ancestor\n  let ancestorElement =\n    splittedRange.commonAncestorContainer instanceof Element\n      ? splittedRange.commonAncestorContainer\n      : splittedRange.commonAncestorContainer.parentElement;\n      \n  while (ancestorElement) {\n    if (!ancestorElement.scrollTop) {\n      ancestorElement.scrollTop = 1;\n    }\n    if (\n      ancestorElement.scrollTop &&\n      ancestorElement.scrollHeight > ancestorElement.clientHeight &&\n      getComputedStyle(ancestorElement).overflowY !== \"hidden\"\n    ) {\n      break;\n    }\n    ancestorElement = ancestorElement.parentElement;\n  }\n  \n  const scrollableAncestorElement = ancestorElement ?? document.documentElement;\n\n  // Create barmap\n  const barmapElement = document.createElement(\"button\");\n  barmapElement.classList.add(\"anno\", \"barmap\");\n  barmapElement.style.backgroundColor = color;\n  barmapElement.setAttribute(\"aria-label\", \"Scroll to annotation\");\n\n  const nextRange = new Range();\n  const firstTextNode = textNodes[0];\n  const lastTextNode = textNodes[textNodes.length - 1];\n  \n  if (firstTextNode) {\n    nextRange.setStart(firstTextNode, 0);\n  }\n  if (lastTextNode) {\n    nextRange.setEnd(lastTextNode, lastTextNode.textContent?.length ?? 0);\n  }\n\n  barmapElement.addEventListener(\"click\", () => {\n    const { exact, prefix, suffix } = quoteText(\n      getTextIndex(document.body),\n      nextRange\n    );\n\n    const url = new URL(location.href);\n    url.hash = `#${[\n      `e=${encodeForScrapboxReadableLink(exact)}`,\n      ...(prefix ? [`p=${encodeForScrapboxReadableLink(prefix)}`] : []),\n      ...(suffix ? [`s=${encodeForScrapboxReadableLink(suffix)}`] : []),\n    ].join(\"&\")}`;\n    \n    history.pushState(null, \"\", url);\n    prevURL = undefined;\n    handleDocumentChange();\n  });\n\n  document.body.append(barmapElement);\n\n  // Handle resize\n  const handleResize = () => {\n    const elements = [...markElements, ...iframeElements];\n    const isVisible = elements.some((element) => element.offsetParent);\n\n    if (!isVisible) {\n      barmapElement.style.display = \"none\";\n      return;\n    }\n\n    const scrollableAncestorDOMRect =\n      scrollableAncestorElement === document.documentElement\n        ? new DOMRect()\n        : scrollableAncestorElement.getBoundingClientRect();\n        \n    const domRects = elements.map((element) =>\n      element.getBoundingClientRect()\n    );\n\n    const top = Math.min(...domRects.map((domRect) => domRect.top));\n    const bottom = Math.max(...domRects.map((domRect) => domRect.bottom));\n\n    const clientTop =\n      ((scrollableAncestorElement.scrollTop +\n        (top - scrollableAncestorDOMRect.top)) /\n        scrollableAncestorElement.scrollHeight) *\n      scrollableAncestorElement.clientHeight;\n      \n    const clientBottom =\n      ((scrollableAncestorElement.scrollTop +\n        (bottom - scrollableAncestorDOMRect.top)) /\n        scrollableAncestorElement.scrollHeight) *\n      scrollableAncestorElement.clientHeight;\n\n    barmapElement.style.display = \"block\";\n    barmapElement.style.left = `${\n      scrollableAncestorDOMRect.left +\n      scrollableAncestorElement.clientWidth -\n      16\n    }px`;\n    barmapElement.style.top = `${\n      scrollableAncestorDOMRect.top + clientTop - 16\n    }px`;\n    barmapElement.style.height = `${Math.max(\n      clientBottom - clientTop,\n      4\n    )}px`;\n  };\n  \n  const resizeObserver = new ResizeObserver(handleResize);\n  resizeObserver.observe(document.body);\n  handleResize();\n\n  return {\n    range: nextRange,\n    cleanUp: () => {\n      resizeObserver.disconnect();\n      markElements.forEach((markElement) => {\n        markElement.after(...markElement.childNodes);\n        markElement.remove();\n      });\n      iframeElements.forEach((iframeElement) => {\n        iframeElement.remove();\n      });\n      barmapElement.remove();\n    },\n  };\n}\n\n// Clear all annotations\nfunction clearAnnotations(): void {\n  document.querySelectorAll(\".anno\").forEach((element) => {\n    if (element.classList.contains(\"marker\")) {\n      element.after(...element.childNodes);\n    }\n    element.remove();\n  });\n}\n\n// Highlight from URL hash\nconst highlight = (): void => {\n  if (isHighlighted) return;\n\n  let searchParams: URLSearchParams;\n  try {\n    searchParams = new URLSearchParams(location.hash.slice(1));\n  } catch {\n    return;\n  }\n\n  const exact = searchParams.get(\"e\");\n  if (!exact) return;\n\n  const selection = getSelection();\n  if (!selection) return;\n\n  const results = textQuoteSelectorAll(getTextIndex(document.body), {\n    exact,\n    prefix: searchParams.get(\"p\") ?? undefined,\n    suffix: searchParams.get(\"s\") ?? undefined,\n  });\n  \n  const range = results[0]?.range;\n  if (!range) return;\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n  \n  const startElement =\n    range.startContainer instanceof Element\n      ? range.startContainer\n      : range.startContainer.parentElement;\n      \n  startElement?.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n  isHighlighted = true;\n};\n\n// Check for URL changes\nconst checkURLChange = (): void => {\n  if (prevURL !== location.href) {\n    const urlChangeMessage: ContentToBackgroundMessage = {\n      type: \"URL_CHANGED\",\n      url: getCanonicalURL(),\n      prevInjectionData,\n    };\n    \n    withErrorHandling(\n      () => browser.runtime.sendMessage(urlChangeMessage),\n      \"Send URL change\"\n    );\n    \n    isHighlighted = false;\n  }\n  prevURL = location.href;\n};\n\n// Handle document changes\nconst handleDocumentChange = (): void => {\n  checkURLChange();\n  highlight();\n};\n\n// Initialize mutation observer\nconst mutationObserver = new MutationObserver(handleDocumentChange);\n\n// Initialize on load\nfunction initialize(): void {\n  console.log(\"[content] Initializing anno content script...\");\n  console.log(\"[content] Current URL:\", window.location.href);\n  console.log(\"[content] Browser API available:\", typeof browser !== 'undefined');\n  \n  initializeStyles();\n  handleDocumentChange();\n  \n  mutationObserver.observe(document, {\n    subtree: true,\n    childList: true,\n    characterData: true,\n  });\n\n  // Send page loaded message\n  const pageLoadedMessage: ContentToBackgroundMessage = {\n    type: \"PAGE_LOADED\",\n    url: getCanonicalURL(),\n  };\n  \n  withErrorHandling(\n    () => browser.runtime.sendMessage(pageLoadedMessage),\n    \"Send page loaded\"\n  );\n  \n  console.log(\"[content] Initialization complete\");\n}\n\n// Keyboard shortcut handler\ndocument.body.addEventListener(\"pointerdown\", async (event) => {\n  const selection = getSelection();\n  const selectedElement = document.elementFromPoint(\n    event.clientX,\n    event.clientY\n  );\n  \n  if (\n    !(event.ctrlKey || event.metaKey) ||\n    !event.altKey ||\n    !selection ||\n    !selectedElement\n  ) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  const range = new Range();\n  range.selectNode(selectedElement);\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  await mark();\n});\n\n// Start initialization when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", initialize);\n} else {\n  initialize();\n}"],
  "mappings": "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",
  "names": ["array", "diff", "value", "obj", "exactMatchIndex", "configs", "mutationObserver"]
}
